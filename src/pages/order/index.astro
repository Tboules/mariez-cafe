---
import { getFirestore } from "firebase-admin/firestore";
import { app } from "../../firebase/server";
import Layout from "../../layouts/Layout.astro";
import {
  ORDER_OPTIONS_MILK,
  ORDER_OPTIONS_REFRESHER,
  ORDER_OPTIONS_TYPE,
  type MenuItem,
ORDER_OPTIONS_SWEETNESS,
} from "../../types";
import { ORDER_OPTIONS_TOPPINGS } from "../../types";

const drinkId = Astro.url.searchParams.get("drinkId");
if (!drinkId) {
  console.log("no drink id");
  return Astro.redirect("/");
}

const db = getFirestore(app);
const drinkRef = await db.collection("menuItems").doc(drinkId).get();

const drink = (await drinkRef.data()) as MenuItem | undefined;

if (!drink) {
  return Astro.redirect("/");
}

console.log(drink);
---

<Layout title="Order Page">
  <main class="wrapper">
    <h1>{drink.name}</h1>
    {drink.drinkTypes == "Hot" && <h4>*Hot Drink</h4>}
    {drink.drinkTypes == "Iced" && <h4>*Iced Drink</h4>}

    <form action="">
      <div class="form-input">
        <label>Ordered By:</label>
        <input type="text" name="orderedBy" placeholder="Your Name" />
      </div>
      {
        drink.drinkTypes == "Either" && (
          <div class="form-input">
            <label>Drink Type:</label>
            <select name="orderOptionsType">
              {Object.values(ORDER_OPTIONS_TYPE).map((type) => (
                <option value={type}>{type}</option>
              ))}
            </select>
          </div>
        )
      }

      {
        drink.milk == true && (
          <div class="form-input">
            <label>Milk:</label>
            <select name="orderOptionsMilk">
              {Object.values(ORDER_OPTIONS_MILK).map((milkType) => (
                <option value={milkType}>{milkType}</option>
               ))}
            </select>
          </div>
        )
      }

      {
          drink.isRefresher == true && (
            <div class="form-input">
              <label>Base:</label>
              <select name="orderOptionsRefresher">
                {Object.values(ORDER_OPTIONS_REFRESHER).map((base) => (
                  <option value={base}>{base}</option>
                ))}
              </select>
            </div>
          )
      }

      {
        drink.isRefresher == null && (
            <div class="form-input">
            <label>Sweetness:</label>
            <select name="orderOptionsSweetness">
              {
                Object.values(ORDER_OPTIONS_SWEETNESS).map((sweetnessLevel) => (
                  <option value={sweetnessLevel}>{sweetnessLevel}</option>
                ))
              }
            </select>
          </div>
        )
      }

      {
        drink.isTea == null && (
          <div class="form-input">
          <label>Toppings:</label>
          <select name="orderOptionsToppings">
            {
              Object.values(ORDER_OPTIONS_TOPPINGS).map((toppings) => (
                <option value={toppings}>{toppings}</option>
              ))
            }
          </select>
        </div>
        )
      }
      <button class="button">Submit</button>
    </form>
  </main>
</Layout>

<style>
  .wrapper {
    margin: 0 auto;
    max-width: 900px;
    padding: 1rem;
  }
  .form-input {
    display: flex;
    flex-direction: column;
    /* background-color: #fdeee2; */
  }

  .button {
    margin-top: 10px;
    background: #5b3720;
    border-radius: 10px;
    color: #d9bea9;
  }

  /* color: #5b3720;
    background: #d9bea9;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "Lato", sans-serif;
    font-weight: 300;
    font-style: normal; */
</style>
